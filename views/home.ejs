<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%=title%></title>
    <link rel="stylesheet" href="/codeial/assets/scss/home.scss">
</head>
<body>
    <div id="home-container" style="display: flex; justify-content: space-around;">
        <!-- <h1>Home page rendered from EJS.</h1> -->
    <%if(!locals.user){%>
        <li>
            <a href="/users/sign-in">Sign In</a>
        </li>
        
        <li>
            <a href="/users/sign-up">Sign Up</a>
        </li>
    <%}%>

    <!-- User's Feed -->
    <section id="feed-post">
        <%if(locals.user){%>
            <a href="/users/profile/<%=user.id%>"><%=user.name%></a>
        <form action="/posts/create" id="new-post-form" method="post">
            <textarea name="content" cols="30" rows="10" placeholder="Your Content goes here..." required></textarea>
            <br>
            <button type="submit">Post</button>
        </form>
        <%}%>
    </section>
    <section>
        <div id="posts-list-container"> 
            <ul>
                <%for(post of posts){%>
                    <%- include('_posts') -%>
                <%}%>
            </ul>
        </div>
    </section>

    <!-- showing users -->
    <section id="user-friend">
        <h4>Friends</h4>
        <% for(u of users){ %>
            <p>
                <a href="/users/profile/<%=u.id%>"><%=u.name%></a>
            </p>
        <%}%>
    </section>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.4.js" integrity="sha256-a9jBBRygX1Bh5lt8GZjXDzyOB+bWve9EiO7tROUtj/E=" crossorigin="anonymous"></script>
    <!-- <script type="application/javascript" src="../assets/js/home_posts.js"></script> -->
    <script>
    {
    //method to submit the form for new post using AJAX
    let createPost = function(){
        let newPostForm = $('#new-post-form');

        //prevent dafault submission
        newPostForm.submit(function(e){
            e.preventDefault();

            $.ajax({
                method: 'post',
                url: '/posts/create',
                data: newPostForm.serialize(),  //convert a form's data into a string representation that can be easily sent to a server via an HTTP request, typically using AJAX.
                success: function(data){
                    let newPost = newPostDom(data.data.post);
                    $('#posts-list-container').prepend(newPost);
                    //console.log($(' .delete-post-button', newPost));
                    deletePost($(' .delete-post-button', newPost)); // Including the space allows the selector to look for an element with class delete-post-button at any level of nesting below newPost.
                },
                error: function(error){
                    console.log(error);
                }
            });
        });
    }

    //method to create a post in DOM
    let newPostDom = function(post){
        return $(`<li id="post-${post._id}">
        <p>
            ${post.content}
                <small>
                    <a class="delete-post-button" href="/posts/destroy/${post._id}">X</a>
                </small>
            
        </p>
        <p>
        <small>
            ${post.user.name}
        </small>
        </p>
    
        <!-- Adding coment -->
        <div class="post-comments">
    
            <!-- to display comment -->
            <div class="post-comments-list">
                <ul id="post-comments-${post._id}">
                </ul>
            </div>
        
            <form action="/comments/create" method="post">
                <textarea name="content" cols="10" rows="2" placeholder="comment here..." required></textarea>
                <input type="hidden" name="postId" value="${post._id}">        <!-- sending the post id for which comment need t be added -->
                <button type="submit">Comment</button>
            </form>
        </div>
    </li>`);
    }

    //method to delete a post
    let deletePost = function(deleteLink){
        $(deleteLink).click(function(e){
            e.preventDefault();

            $.ajax({
                method: 'get',
                url: $(deleteLink).prop('href'),
                success: function(data){
                    // let elementToRemove = $('#posts-list-container').find(`#post-${data.data.post._id}`);
                    // elementToRemove.remove();
                    $(`#post-${data.data.post_id}`).remove();
                },
                error: function(err){
                    console.log(err);
                }
            });
        });
    };
    
    createPost();

    
    $('.delete-post-button').click(function(e) {
        e.preventDefault();
        //deletePost($(this)); // Pass the button element to the deletePost() function
        
        $.ajax({
            method: 'get',
            url: $(this).prop('href'),
            success: function(data){
                    $(`#post-${data.data.post_id}`).remove();
            },
            error: function(err){
                    console.log(err);
            }
        });
    });
    

}
// {
//     let createComment = function(){
//         let newCommentForm = $('#new-comment-form');

//         newCommentForm.submit(function(e){
//             e.preventDefault();
            
//             $.ajax({
//                 method: 'post',
//                 url: '/comments/create',
//                 data: newCommentForm.serialize(),
//                 success: function(data){
//                     let newComment = newCommentDom(data.data.content, 'Raj');
//                     console.log(data);
//                 },
//                 error: function(err){
//                     console.log(err);
//                 }
//             });
//         });
//     }
//     let newCommentDom = function(){
        
//     };
//     createComment();
// }

    </script>
</body>
</html>